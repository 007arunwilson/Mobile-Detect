{"body":"### About\r\n\r\nMobile\\_Detect is a lightweight PHP class for detecting mobile devices. It uses the user-agent string combined with specific HTTP headers to detect the mobile environment.\r\n**Note:** this project is _the same_ with [http://code.google.com/p/php-mobile-detect/](http://code.google.com/p/php-mobile-detect/). We are keeping both repositories updated until the transition to GitHub is completed.\r\n\r\nWe are proudly sponsored by ![BrowserStack](http://jquery.org/wp-content/uploads/2010/01/browserstack-150.png). [BrowserStack](http://www.browserstack.com) is a complete browser coverage tool (including mobile devices) for testing you web application.\r\n\r\n<a href='http://www.pledgie.com/campaigns/18179'><img alt='Click here to lend your support to: Mobile Detect PHP class and make a donation at www.pledgie.com !' src='http://www.pledgie.com/campaigns/18179.png?skin_name=chrome' border='0' /></a>\r\n\r\n### Usage\r\n\r\nInclude and instantiate the class.\r\n```php\r\ninclude 'Mobile_Detect.php';\r\n$detect = new Mobile_Detect();\r\n```\r\n\r\n```php\r\nif ($detect->isMobile()) {\r\n    // Any mobile device.\r\n}\r\n```\r\n\r\n```php\r\nif($detect->isTablet()){\r\n    // Any tablet device.\r\n}\r\n```\r\n\r\nCheck for a specific platform:\r\n```php\r\nif($detect->isiOS()){\r\n    // Code to run for the Apple's iOS platform.\r\n}\r\n```\r\n\r\n```php\r\nif($detect->isAndroidOS()){\r\n    // Code to run for the Google's Android platform.\r\n}\r\n```\r\nOther case insensitive available methods are `isIphone()`, `isIpad()`, `isBlackBerry()`, `isKindle()`, `isOpera()`, etc. For the full list of available methods check the `demo.php` file or the wiki.","google":"UA-204358-16","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Mobile_Detect is a lightweight PHP class for detecting mobile devices. It uses the User-Agent string combined with specific HTTP headers to detect the mobile environment.","name":"Mobile-Detect"}